{"version":3,"sources":["Assets/logo.jpg","Components/UrlPage/index.js","Components/Categories/index.js","App.js","index.js"],"names":["Index","selectedCategory","setUrl","folderList","setFolderList","useState","urlData","setUrlData","JSON","parse","localStorage","getItem","urlList","setUrlList","React","open","setOpen","action","setAction","onTextChange","e","target","name","value","useEffect","setItem","stringify","handleClose","Dialog","maxWidth","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","variant","color","newArray","filter","val","i","console","log","autoFocus","Grid","container","spacing","style","margin","width","marginTop","padding","boxShadow","item","justify","alignItems","xs","Avatar","alt","src","Logo","height","marginBottom","Typography","align","startIcon","size","justifyContent","lg","TextField","label","placeholder","onChange","fullWidth","required","InputLabelProps","shrink","type","window","event","preventDefault","url","List","component","minWidth","subheader","ListSubheader","display","IconButton","map","index","ListItem","button","Link","href","ListItemIcon","ListItemText","primary","secondary","ListItemSecondaryAction","edge","deleteItem","Divider","setSelectedCategory","folder","setFolder","useHistory","marginLeft","flexWrap","Paper","onFolderClick","elevation","flexDirection","cursor","noWrap","App","className","UrlPage","Categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a757af5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.450d4629.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Typography, TextField, Button, Link, Avatar } from '@material-ui/core'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Logo from '../../Assets/logo.jpg';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nconst Index = ({ selectedCategory, setUrl, folderList, setFolderList }) => {\r\n\r\n    const [urlData, setUrlData] = useState({});\r\n    const [urlList, setUrlList] = useState(JSON.parse(localStorage.getItem(\"urlList\")) ? JSON.parse(localStorage.getItem(\"urlList\")) : []);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [action, setAction] = useState(\"\");\r\n\r\n    const onTextChange = (e) => {\r\n        setUrlData({\r\n            ...urlData,\r\n            [e.target.name]: e.target.value,\r\n            selectedCategory: selectedCategory\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        window.event.preventDefault();\r\n        if (urlData.name && urlData.url) {\r\n\r\n            setUrlList([\r\n                ...urlList,\r\n                urlData\r\n            ])\r\n        }\r\n    }\r\n\r\n    const setDialogAction = (str) => {\r\n        setAction(str);\r\n        setOpen(true);\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n        if (index > -1) {\r\n            let newArray = urlList.filter((val, i) => i !== index);\r\n            setUrlList(newArray);\r\n        }\r\n    }\r\n\r\n    const deleteFolder = () => {\r\n        let newArray = folderList.filter((val, i) => val.name !== selectedCategory);\r\n        console.log({ newArray })\r\n        setFolderList(newArray);\r\n        setUrl(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"urlList\", JSON.stringify(urlList));\r\n    }, [urlList])\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            {\r\n                open && <Dialog\r\n                    open={open}\r\n                    maxWidth=\"sm\"\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{action === \"folder\" ? \"Delete Folder\" : \"Delete Url\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            {action === \"folder\" ? \"Are you sure you want to delete this folder ? By deleting this folder, all the urls will be deleted.\" : 'Are you sure you want to delete this url ?'}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\r\n                            No\r\n                        </Button>\r\n                        <Button onClick={deleteFolder} variant=\"contained\" color=\"primary\" autoFocus>\r\n                            Yes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            }\r\n            <Grid container spacing={2} style={{ margin: 'auto', width: '90vw', marginTop: 20, padding: 15, boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }}>\r\n\r\n                <Grid item container justify=\"space-between\" alignItems=\"center\" xs={12}>\r\n                    <Avatar alt=\"Shop List Logo\" src={Logo} style={{ width: 70, height: 70, marginBottom: 20 }} />\r\n                    <Typography variant=\"h5\" align=\"center\">{selectedCategory}</Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        size=\"small\"\r\n                        onClick={() => setDialogAction(\"folder\")}\r\n                    >\r\n                        Delete Folder\r\n                    </Button>\r\n\r\n                </Grid>\r\n                <Grid item container justifyContent=\"center\" xs={12}>\r\n                    <Grid item container spacing={2} xs={12} lg={10}>\r\n                        <Grid item xs={12} lg={4}>\r\n                            <TextField\r\n                                id=\"standard-full-width\"\r\n                                label=\"Name of Shop\"\r\n                                name=\"name\"\r\n                                style={{ margin: 6 }}\r\n                                placeholder=\"Amazon, Aliexpress etc\"\r\n                                onChange={(e) => onTextChange(e)}\r\n                                // helperText=\"Full width!\"\r\n                                fullWidth\r\n                                required\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} lg={8}>\r\n                            <TextField\r\n                                id=\"standard-full-width\"\r\n                                label=\"Enter URL\"\r\n                                name=\"url\"\r\n                                required\r\n                                style={{ margin: 6 }}\r\n                                placeholder=\"https://www.aliexpress.com\"\r\n                                // helperText=\"Full width!\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                onChange={(e) => onTextChange(e)}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" type=\"submit\" onClick={onSubmit} color=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item container justifyContent=\"center\" xs={12}>\r\n                    <Grid item container justifyContent=\"center\" xs={12}>\r\n                        <List component=\"nav\" style={{ minWidth: '100%', }} aria-label=\"main mailbox folders\" subheader={\r\n                            <ListSubheader component=\"div\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} id=\"nested-list-subheader\">\r\n                                <span>Saved Urls</span>\r\n                                <IconButton >\r\n                                    <PrintIcon />\r\n                                </IconButton>\r\n                            </ListSubheader>\r\n                        }>\r\n\r\n                            {\r\n                                urlList.map((value, index) => value.selectedCategory === selectedCategory && (\r\n                                    <div>\r\n                                        <ListItem button key={index} component={Link} target=\"_blank\" href={value.url}>\r\n                                            <ListItemIcon>\r\n                                                <AddShoppingCartIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={value.url} secondary={value.name} />\r\n                                            <ListItemSecondaryAction>\r\n                                                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteItem(index)}>\r\n                                                    <DeleteIcon />\r\n                                                </IconButton>\r\n                                            </ListItemSecondaryAction>\r\n                                        </ListItem>\r\n                                        <Divider variant=\"middle\" />\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        startIcon={<ArrowLeftIcon />}\r\n                        size=\"small\"\r\n                        onClick={() => setUrl(false)}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","import { Paper, Typography, Grid, TextField, Button, Avatar } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport FolderSpecialIcon from '@material-ui/icons/FolderSpecial';\r\nimport { Autorenew } from '@material-ui/icons';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Logo from '../../Assets/logo.jpg';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst Index = ({ setSelectedCategory, setUrl, folderList, setFolderList }) => {\r\n    const [folder, setFolder] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const onTextChange = (e) => {\r\n        setFolder({\r\n            ...folder,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n        setSelectedCategory(e.target.value);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        console.log({ folder })\r\n        window.event.preventDefault();\r\n        if (folder.name) {\r\n            setFolderList([\r\n                ...folderList,\r\n                folder\r\n            ])\r\n            localStorage.setItem(\"folderList\", JSON.stringify(folderList));\r\n        }\r\n    }\r\n\r\n    const onFolderClick = (item) => {\r\n        console.log({ item })\r\n        setSelectedCategory(item.name ? item.name : \"No Name\");\r\n        setUrl(true);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"folderList\", JSON.stringify(folderList));\r\n        let newArray = JSON.parse(localStorage.getItem(\"folderList\"))\r\n    }, [folderList])\r\n\r\n    return (\r\n        <form >\r\n            <Grid container spacing={2} style={{ margin: 'auto', width: '90vw', marginTop: 20, padding: 15, boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\" }}>\r\n                <Grid item container justify=\"space-between\" alignItems=\"center\" xs={12}>\r\n                    <Avatar alt=\"Shop List Logo\" src={Logo} style={{ width: 70, height: 70, marginBottom: 20 }} />\r\n                    <div style={{ display: 'flex', height: 40 }}>\r\n                        <TextField\r\n                            id=\"standard-full-width\"\r\n                            label=\"Create New Folder\"\r\n                            name=\"name\"\r\n                            placeholder=\"Write Folder Name...\"\r\n                            onChange={(e) => onTextChange(e)}\r\n                            // helperText=\"Full width!\"\r\n                            fullWidth\r\n                            required\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => onSubmit()} style={{ marginLeft: 5 }}>Submit</Button>\r\n                    </div>\r\n                </Grid>\r\n                <hr />\r\n\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" align=\"center\">Select Folder</Typography>\r\n                </Grid>\r\n                <Grid item container style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {\r\n                        folderList.map((item) => {\r\n                            return (\r\n                                <Paper onClick={() => onFolderClick(item)} elevation={3} style={{ padding: 6, margin: 6, display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', cursor: 'pointer' }}>\r\n                                    <FolderSpecialIcon style={{ width: 60, height: 60 }} />\r\n                                    <Typography variant=\"p\" noWrap={true} style={{ margin: 'auto', maxWidth: 65 }}>{item.name}</Typography>\r\n                                </Paper>\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Index;","import React, { useState } from 'react'\nimport UrlPage from './Components/UrlPage';\nimport Categories from './Components/Categories';\n\nfunction App() {\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [folderList, setFolderList] = useState(JSON.parse(localStorage.getItem(\"folderList\")) ? JSON.parse(localStorage.getItem(\"folderList\")) : []);\n\n  const [url, setUrl] = useState(false);\n  return (\n    <div className=\"App\">\n      {\n        url ? <UrlPage selectedCategory={selectedCategory} folderList={folderList} setFolderList={setFolderList} setUrl={setUrl} setSelectedCategory={setSelectedCategory} /> : <Categories selectedCategory={selectedCategory} folderList={folderList} setFolderList={setFolderList} setUrl={setUrl} setSelectedCategory={setSelectedCategory} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}